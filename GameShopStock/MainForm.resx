<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAF2SURBVEhLrda/K4VRHMfxBykl2RSLicVAbH5E4Q9QigxW
        GWwmKatMFquyIBtl8KvYGMzys0QGFFEY/Hp/6946ffs899J5PvWqe++553uennM65yR/TDc2cYdTzKMa
        mWYEn/hxzrCFQUSnBq/wg4S+0ImoTEMV95YRlX2owt4FonIDVdh7QVSuoQp7D4jKOlRh7xBROYAq7NlS
        j8oxVGHvCVFZgCrsbSMq9TiHKp5nK64F0RmGGiBvBpmkArdQg9j2VIfMMgA10BQyTQfUQF3IJA2YQNoO
        YXvcJJrw75RhFCdQxdNcYgzlKJo2FBpgFc1YCX7zrmCvOjWtKHTIfcOWegmGct/V/8w72iGzC9Up9Aw7
        dW23Vu2h1I32HqpDyC4lljmo9tAbZB6hOoT6YOmBag99QGYPqkOoFhZ7fao9tAgZ67wEexLV0Sa/Chbb
        ltQVzObQLiq9KJpK9GMcNhdr2IEdgke5z3af24A92CxsFTaiFCJJ8gtqziG36bMu1wAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>