<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5PG4i4Q8AAAAAElFTkSuQmCC
</value>
  </data>
</root>